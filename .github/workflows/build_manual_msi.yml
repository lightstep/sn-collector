name: Build MSI (Manual)
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Collector Version"
        required: true
        default: "v0.0.1"

jobs:
  build-64bit-msi:
    runs-on: windows-2022
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '~1.21.5'
          check-latest: true
      - name: Generate distribution sources
        run: |
            go install go.opentelemetry.io/collector/cmd/builder@v0.95.0
            cd collector
            builder --config otelcol-builder.yaml --skip-compilation
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: "v1.22.1"
          args: build --single-target --skip=validate --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Copy Windows Collector Binary
        run: cp dist/otelcol-servicenow_windows_amd64_v1/otelcol-servicenow.exe windows/otelcol-servicenow.exe
      - name: Copy Example Config
        run: cp collect/config/otelcol-windows-hostmetrics.yaml windows/config.yaml
      - name: Copy LICENSE
        run: cp LICENSE windows/LICENSE
      # HACK: Copy build directory to C drive to avoid this error, since there must be a relative path from the tempdir that go-msi uses
      # for the MSI to build properly
      - name: Copy Build Dir
        run: |
          cp -r windows C:/build
          echo "C:/build" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      # Installs go-msi and wix.
      - name: Install Build Tools
        run: |
          curl -f -L -o go-msi.exe https://github.com/observIQ/go-msi/releases/download/v2.2.0/go-msi.exe
          curl -f -L -o wix310-binaries.zip http://wixtoolset.org/downloads/v3.10.3.3007/wix310-binaries.zip
          unzip wix310-binaries.zip
        working-directory: C:/build
      - name: "Build MSI from Tagged Release"
        run: go-msi.exe make -m otelcol-servicenow.msi --version ${{ github.event.inputs.version }} --arch amd64
        working-directory: C:/build
      - name: "Upload MSI"
        uses: actions/upload-artifact@v4
        with:
          name: otelcol-servicenow.msi
          path: C:/build/otelcol-servicenow.msi
          # Short lived because this is meant as an action for developers
          retention-days: 1
