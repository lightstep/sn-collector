apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: sn-collector
spec:
  mode: deployment
  image: ghcr.io/lightstep/sn-collector/sn-collector-experimental:latest-amd64
  imagePullPolicy: Always
  env:
    # 1/ Edit this to specify your Kubernetes cluster name.
    - name: K8S_CLUSTER_NAME
      value: "undefined-cluster"   
    # 2/ Edit this to point to your instance JSON event endpoint.
    - name: MID_INSTANCE_EVENTS_URL
      value: "https://itompmx.service-now.com/api/global/em/jsonv2"
    # 3/ Edit this to use a user with em_event permission.
    - name: MID_INSTANCE_EVENTS_USERNAME
      value: "cobnow"
    # *Do not* directly edit, set as a Kubernetes secret.
    - name: MID_INSTANCE_EVENTS_PASSWORD
      valueFrom:
        secretKeyRef:
          key: MID_INSTANCE_EVENTS_PASSWORD
          name: mid-instance-events-password
    # *Do not* edit directly, set as a Kubernetes secret.
    - name: LS_TOKEN
      valueFrom:
        secretKeyRef:
          key: LS_TOKEN
          name: ls-token-secret
  config: |
    receivers:
      k8s_events:
      k8s_cluster:
        node_conditions_to_report: [Ready, MemoryPressure]

    processors:
      resource/clustername:
        attributes:
        - key: k8s.cluster.name
          value: ${K8S_CLUSTER_NAME}
          action: upsert

      k8sattributes:
        passthrough: false
        auth_type: "kubeConfig"
        extract:
          metadata:
            - k8s.cluster.uid
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.deployment.name
            - k8s.replicaset.name
            - k8s.replicaset.uid
            - k8s.daemonset.name
            - k8s.daemonset.uid
            - k8s.job.name
            - k8s.job.uid
            - k8s.cronjob.name
            - k8s.statefulset.name
            - k8s.statefulset.uid
            - container.image.tag
            - container.image.name

    exporters:
      servicenow/logs:
        instance_logs_url: ${MID_INSTANCE_LOGS_URL}
        insecure_skip_verify: true
        api_key: ${MID_INSTANCE_LOGS_API_KEY}
      servicenow/metrics:
        instance_metrics_url: ${MID_INSTANCE_METRICS_URL}
        username: ${MID_INSTANCE_METRICS_USERNAME}
        password: ${MID_INSTANCE_METRICS_PASSWORD}
      servicenow/events:
        instance_events_url: "${MID_INSTANCE_EVENTS_URL}"
        username: "${MID_INSTANCE_EVENTS_USERNAME}"
        password: "${MID_INSTANCE_EVENTS_PASSWORD}"
      otlp/lightstep:
        endpoint: ingest.lightstep.com:443
        headers:
          'lightstep-access-token': '${LS_TOKEN}'
      debug/detailed:
        verbosity: detailed
      debug:
        verbosity: normal

    service:
      pipelines:
        # metrics/in:
        #   receivers: [k8s_cluster]
        #   processors: [resource/clustername, k8sattributes]
        #   exporters: [debug, servicenow/metrics]
        logs/k8s_events:
          receivers: [k8s_events]
          processors: [resource/clustername, k8sattributes]
          # Event Management:
          exporters: [debug, servicenow/events, otlp/lightstep]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sn-collector
rules:
- apiGroups: [""]
  resources:
  - events
  - namespaces
  - namespaces/status
  - nodes
  - nodes/stats
  - nodes/spec
  - nodes/proxy
  - nodes/metrics
  - services
  - resourcequotas
  - replicationcontrollers
  - replicationcontrollers/status
  - endpoints
  - persistentvolumes
  - persistentvolumeclaims
  - pods
  - pods/status
  verbs: ["get", "list", "watch"]
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - servicemonitors
  - podmonitors
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs: ["get", "list", "watch"]
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources:
  - endpointslices
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sn-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sn-collector
subjects:
- kind: ServiceAccount
  # quirk of the Operator
  name: sn-collector-collector
  namespace: default
---